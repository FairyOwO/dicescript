on:
  push:
    branches: [ "main" ]

name: Test & Lint

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - run: go mod tidy
      - run: go get
      - run: go generate ./...

      # https://blog.jetbrains.com/go/2019/04/03/profiling-go-applications-and-tests/
      - run: go test -v -bench=^BenchmarkInBoundsChannels$ -cpuprofile=cpu.out -memprofile mem.out .
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: cpu-profile
          path: ./cpu.out
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: mem-profile
          path: ./mem.out

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - run: go mod tidy
      - run: go get
      - run: go generate ./...
      - name: Go vet
        run: go vet -unreachable=false ./...

      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        if: github.event.name == 'pull_request'
        with:
          go-version: '1.18'
          version: 'v1.57.2'
          args: '--timeout 9999s'
          only-new-issues: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        if: github.event.name != 'pull_request'
        with:
          version: 'v1.51.2'
          args: '--timeout 9999s'
